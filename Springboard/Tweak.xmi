#import "Tweak.h"
#import "../MSHUtils.h"
#import <sys/socket.h>
#import <sys/un.h>
#import <unistd.h>

#import <netinet/in.h>
#import <netdb.h>
#import <arpa/inet.h>

%group MitsuhaVisuals

%hook SBIconController

int connfd = -1;

-(void)loadView{
    %orig;

    struct sockaddr_in remote;
    remote.sin_family = AF_INET;
    remote.sin_port = htons(MSHPort);
    inet_aton("127.0.0.1", &remote.sin_addr);
    connfd = socket(AF_INET, SOCK_STREAM, 0);

    int r = -1;
    while(r != 0) {
        r = connect(connfd, (struct sockaddr *)&remote, sizeof(remote));
    }
    
    self.displayLink = [CADisplayLink displayLinkWithTarget:self selector:@selector(updateFrame:)];
    self.displayLink.preferredFramesPerSecond = 20;
    
    MSHJelloViewConfig *config = [MSHJelloViewConfig loadConfigForApplication:@"Springboard"];
    if (!config.enabled) return;
    
    CGFloat height = CGRectGetHeight(self.view.bounds);
    config.waveOffset += height*(9/10) + 100;
    self.view.clipsToBounds = 1;
    
    self.mitsuhaJelloView = [[MSHJelloView alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, height) andConfig:config];
    
    [self.view addSubview:self.mitsuhaJelloView];
    [self.view sendSubviewToBack:self.mitsuhaJelloView];
}

-(void)viewWillAppear:(BOOL)animated{
    %orig;
    self.mitsuhaJelloView.center = CGPointMake(self.mitsuhaJelloView.center.x, self.mitsuhaJelloView.frame.size.height + self.mitsuhaJelloView.config.waveOffset);
}

-(void)viewDidAppear:(BOOL)animated{
    %orig;
    [self.displayLink addToRunLoop:[NSRunLoop currentRunLoop] forMode:NSDefaultRunLoopMode];
    [self.displayLink setPaused:false];
}

-(void)viewWillDisappear:(BOOL)animated{
    %orig;
    [self.displayLink setPaused:YES];
    [self.displayLink removeFromRunLoop:[NSRunLoop currentRunLoop] forMode:NSDefaultRunLoopMode];
}

- (void)dealloc{
    close(connfd);
}

%new
-(void)updateFrame:(CADisplayLink *)dlink{
    UInt32 len = 0;
    send(connfd, &len, sizeof(UInt32), 0);
    recv(connfd, &len, sizeof(UInt32), 0);
    if (len > 0) {
        float * data = (float *)malloc(len);
        recv(connfd, data, len, 0);
        [self.mitsuhaJelloView updateBuffer:data withLength:len/sizeof(float)];
    }
}

%new
-(void)setMitsuhaJelloView:(MSHJelloView *)mitsuhaJelloView{
    objc_setAssociatedObject(self, @selector(mitsuhaJelloView), mitsuhaJelloView, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

%new
-(MSHJelloView *)mitsuhaJelloView{
    return objc_getAssociatedObject(self, @selector(mitsuhaJelloView));
}

%new
-(void)setDisplayLink:(CADisplayLink *)displayLink{
    objc_setAssociatedObject(self, @selector(displayLink), displayLink, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

%new
-(CADisplayLink *)displayLink{
    return objc_getAssociatedObject(self, @selector(displayLink));
}

%end

%end

%ctor{
    %init(MitsuhaVisuals);
}
